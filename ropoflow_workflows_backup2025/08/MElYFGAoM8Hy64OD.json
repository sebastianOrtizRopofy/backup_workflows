{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Create chat message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create chat message1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-29T15:37:55.603Z",
  "id": "MElYFGAoM8Hy64OD",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Backup de flujos",
  "nodes": [
    {
      "parameters": {},
      "id": "5e1d9b79-4472-4733-9490-885765fab555",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        480,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 731.7039821513649,
        "width": 1910.7813046051347,
        "color": 6
      },
      "id": "e5d795e7-a8d6-4459-9204-255f3d577a2d",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "2969478e-8b35-40de-ac40-a195f5aaad26",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        880,
        180
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "ngANGylRgLUWUPA2",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "67e222ed-a27d-4710-90ca-ed7ff7a26af0",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        2160,
        660
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "a1ed66a7-32dc-421d-a92b-a8e6bcce4f54",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        680,
        540
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "933bf68d-e30e-425f-862e-a3dfc21af883",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        440,
        560
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "1caa3df6-a00a-4b74-8932-2b53255de280",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        440,
        820
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "6fca07d9-191d-4875-8524-512da7418ceb",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        640,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "70ab65f5-80f1-4982-a7c5-ad41997a5195",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1080,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "3363b19d-2cea-4ce8-899b-79283d357d3e",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1700,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "57c42f17-0adb-4a28-81f8-191ce25d9ec4",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1700,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "c3f7d5e4-effe-4eaa-a939-41cd26225167",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1700,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "sebastianOrtizRopofy",
          "mode": "list",
          "cachedResultName": "sebastianOrtizRopofy",
          "cachedResultUrl": "https://github.com/sebastianOrtizRopofy"
        },
        "repository": {
          "__rl": true,
          "value": "backup_workflows",
          "mode": "list",
          "cachedResultName": "backup_workflows",
          "cachedResultUrl": "https://github.com/sebastianOrtizRopofy/backup_workflows"
        },
        "filePath": "={{ $('Create sub path').item.json.n8n_data_stringy.parseJson().repo_path }}{{ $json.subPath }}{{ $('Create sub path').item.json.n8n_data_stringy.parseJson().id }}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{ $('Create sub path').item.json.n8n_data_stringy.parseJson().name }} ({{$json.github_status}})"
      },
      "id": "92bbceb1-631c-47d8-9a6b-0f7953851137",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1920,
        1020
      ],
      "typeVersion": 1,
      "webhookId": "40f0c880-fbca-4b27-a36e-acc010aff2e8",
      "credentials": {
        "githubApi": {
          "id": "Vf3EiyB9jsdcms6l",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "sebastianOrtizRopofy",
          "mode": "list",
          "cachedResultName": "sebastianOrtizRopofy",
          "cachedResultUrl": "https://github.com/sebastianOrtizRopofy"
        },
        "repository": {
          "__rl": true,
          "value": "backup_workflows",
          "mode": "list",
          "cachedResultName": "backup_workflows",
          "cachedResultUrl": "https://github.com/sebastianOrtizRopofy/backup_workflows"
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "6cf4c5a3-352b-47f8-8418-2573ad02df32",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1920,
        820
      ],
      "typeVersion": 1,
      "webhookId": "f51e36b6-0667-4650-a23b-855a9bd00083",
      "credentials": {
        "githubApi": {
          "id": "Vf3EiyB9jsdcms6l",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "36478529-05f2-411a-a264-0b8975f5d248",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1080,
        180
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 1,
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "dde6bbbd-4eb0-4384-9e90-347edc47e8a8",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        480,
        280
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Config').first().json.createdAt.split('-')[0] }}/{{ $('Config').first().json.createdAt.split('-')[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "62fc2a6a-6a5b-4710-88ae-455ec710460a",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        860,
        900
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Copia de seguridad en GitHub\nEste flujo de trabajo realiza una copia de seguridad de todos los flujos de trabajo de instancia en GitHub cada 24 horas.\n\nLos archivos se guardan en carpetas con la ruta del directorio \"AAAA/MM/\" y el nombre del archivo \"ID.json\".\n\nEl propietario del repositorio, el nombre del repositorio y la carpeta principal se configuran mediante la función **Variables**, pero se pueden reemplazar con el nodo `Config` en el subflujo de trabajo.\n\nEl flujo de trabajo se ejecuta a sí mismo para reducir el uso de memoria. Una vez completado, envía una notificación opcional a Slack.\n\n## Tiempo de ejecución\nProbado con 1423 flujos de trabajo en `1.44.1`, la primera ejecución tardó menos de 30 minutos y menos de 12 minutos una vez finalizada.",
        "height": 537,
        "width": 385,
        "color": 4
      },
      "id": "36a2213a-99d4-4335-8916-5732903de4e9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        -120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416,
        "width": 1513,
        "color": 7
      },
      "id": "d79b3301-c875-4080-ad6c-ba5f307ebaa6",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        440,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "",
          "value": "={{ $('Config').first().item.repo_name }}"
        },
        "filePath": "={{ $('Config').first().item.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "aaef2e27-a06d-4c88-b612-09a2e1536996",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        240,
        560
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "15b29b55-196d-4673-99ee-3f8b19be69a8",
      "credentials": {
        "githubApi": {
          "id": "Vf3EiyB9jsdcms6l",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "=sebastianOrtizRopofy"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "=ropoflow_workflows_backup"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "=ropoflow_workflows_backup"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "6c57ff65-2897-4cff-b5c4-270ad08627dc",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        240,
        840
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "resource": "chatMessage",
        "chatId": {
          "__rl": true,
          "value": "19:e6054ca4534d482c986110809ae05204@thread.v2",
          "mode": "list",
          "cachedResultName": "Notificaciones Integraciones (group)",
          "cachedResultUrl": "https://teams.microsoft.com/l/chat/19%3Ae6054ca4534d482c986110809ae05204%40thread.v2/0?tenantId=e67529fc-68be-4f5b-aa27-edbad4a44b14"
        },
        "message": "Se realizó la copia de seguridad de los workflows de ropoflow",
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftTeams",
      "typeVersion": 2,
      "position": [
        1740,
        20
      ],
      "id": "5808f004-72cb-4f91-a7ff-0dc51aa60f3f",
      "name": "Create chat message",
      "webhookId": "97173f2f-ef7d-44e2-9924-e530df7ac6d4",
      "credentials": {
        "microsoftTeamsOAuth2Api": {
          "id": "ZN6rkGlpvuVkKKom",
          "name": "Microsoft Teams account"
        }
      }
    },
    {
      "parameters": {
        "resource": "chatMessage",
        "chatId": {
          "__rl": true,
          "value": "19:e6054ca4534d482c986110809ae05204@thread.v2",
          "mode": "list",
          "cachedResultName": "Notificaciones Integraciones (group)",
          "cachedResultUrl": "https://teams.microsoft.com/l/chat/19%3Ae6054ca4534d482c986110809ae05204%40thread.v2/0?tenantId=e67529fc-68be-4f5b-aa27-edbad4a44b14"
        },
        "message": ":x: Failed to backup {{ $('Loop Over Items').item.json.id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.microsoftTeams",
      "typeVersion": 2,
      "position": [
        1740,
        220
      ],
      "id": "0bd0c821-6fce-476a-9db6-9b024e4948eb",
      "name": "Create chat message1",
      "webhookId": "97173f2f-ef7d-44e2-9924-e530df7ac6d4",
      "credentials": {
        "microsoftTeamsOAuth2Api": {
          "id": "ZN6rkGlpvuVkKKom",
          "name": "Microsoft Teams account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "ropoflow_workflows_backup",
  "repo_owner": "sebastianOrtizRopofy",
  "repo_path": "ropoflow_workflows_backup",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-29T19:59:12.337Z",
  "versionId": "cf7d1c90-e750-4556-914f-9d997e863469"
}