{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "Está desde los origenes deseados?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "esta en tabla intermedia?": {
      "main": [
        [
          {
            "node": "Validar email y phone",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "devolver lead ya encontrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Está desde los origenes deseados?": {
      "main": [
        [
          {
            "node": "buscar lead en tabla intermedia",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "devolver que no está en el origen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar lead en tabla intermedia": {
      "main": [
        [
          {
            "node": "esta en tabla intermedia?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar email y phone": {
      "main": [
        [
          {
            "node": "valido el email y phone?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar contacto": {
      "main": [
        [
          {
            "node": "existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "valido el email y phone?": {
      "main": [
        [
          {
            "node": "obtener token",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "devolver que es inválido el phone y el email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener token": {
      "main": [
        [
          {
            "node": "Buscar contacto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "existe?": {
      "main": [
        [
          {
            "node": "Peticion custom fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Peticion custom fields": {
      "main": [
        [
          {
            "node": "mapear custom fields oportunidades",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar custom fields": {
      "main": [
        [
          {
            "node": "Buscar oportunidades del contacto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar oportunidades del contacto": {
      "main": [
        [
          {
            "node": "Tiene oportunidades anteriores?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tiene oportunidades anteriores?": {
      "main": [
        [],
        [
          {
            "node": "obtener el pipeline de llegada del lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener el pipeline de llegada del lead": {
      "main": [
        [
          {
            "node": "obtener el stage de llegada del lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener el stage de llegada del lead": {
      "main": [
        [
          {
            "node": "mapear custom fields oportunidad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mapear custom fields oportunidad": {
      "main": [
        [
          {
            "node": "Crear nueva oportunidad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mapear custom fields oportunidades": {
      "main": [
        [
          {
            "node": "Actualizar custom fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-28T16:05:49.453Z",
  "id": "jq1eZ3zY4rwXKNwf",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "recibir leads impulsa",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/impulsa/oportunidad/:id_location",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "df1854a3-94df-4298-af03-753483e4e3f7",
      "name": "Webhook",
      "webhookId": "56bafe2c-9754-4cd9-8f6e-dfce563b9878"
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "id_impulsa",
              "value": "={{ $json.body.ID }}"
            },
            {
              "key": "id_location",
              "value": "={{ $json.params.id_location }}"
            },
            {
              "key": "email",
              "value": "={{ $json.body.Email }}"
            },
            {
              "key": "phone",
              "value": "={{ $json.body.Telefono2 }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1.1,
      "position": [
        280,
        0
      ],
      "id": "2cfe4481-3a8c-49ef-9c2a-a2efa1dc03de",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2e1f212b-14cc-4ee1-a210-043e33e3ea60",
              "leftValue": "={{ $json.id_impulsa }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1020,
        -160
      ],
      "id": "06eae1e0-80d3-4244-bacd-b73af88368c0",
      "name": "esta en tabla intermedia?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "a5d5388e-d9c6-435c-9253-821ad1f4514c",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "mobility lead",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "8f89c6d8-fe3d-4740-a7c4-0f3226a32a9c",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "auteco sas",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2834833a-14d4-42f5-ad86-36f54bcc2a9a",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "mobility test drive",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "c3da40a5-8267-4349-aecf-cbb18337ddff",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "hub-terminal",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2490a487-df3f-42fa-8555-0ab55085cace",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "origin_pilot_2",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "b099cd25-b88b-4d93-9aef-d49fed3067fc",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "origin_pilot_3",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        560,
        0
      ],
      "id": "c248c7e0-fe5e-45e4-90e8-c798ae35a16f",
      "name": "Está desde los origenes deseados?"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "system_ropofy_opportunities_impulsa",
          "mode": "list",
          "cachedResultName": "system_ropofy_opportunities_impulsa"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "id_impulsa",
              "value": "={{ $json.body.ID + \"\" }}"
            },
            {
              "column": "id_location",
              "value": "={{ $json.params.id_location + \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        800,
        -140
      ],
      "id": "7ed7ccd4-882d-4d6b-8ad6-f582b2b49345",
      "name": "buscar lead en tabla intermedia",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "tfjc18K49daMASdp",
          "name": "Base de datos APIS"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Función para validar email usando regex\nfunction isValidEmail(email) {\n  if (!email || typeof email !== 'string') {\n    return false;\n  }\n  \n  const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  return regex.test(email) && !email.includes(' ');\n}\n\n// Obtener datos del request\nconst data = $('Webhook').first().json.body;\n\n// Variables para almacenar email y teléfono validados\nlet email = '';\nlet telefono = '';\n\n// Validar email\nif (data.Email && isValidEmail(data.Email)) {\n  console.log(\"ES VALIDO EL EMAIL\");\n  email = data.Email;\n} else {\n  console.log(\"ES INVALIDO EL EMAIL\");\n  data.Email = '';\n  email = \"\";\n}\n\n// Validar teléfono (eliminar + al inicio y espacios)\nif (data.Telefono2) {\n  telefono = data.Telefono2.toString().trim().replace(/^\\+/, \"\"); \n}\n\n// Verificar que al menos uno de los dos esté presente\nif (email === '' && telefono === '') {\n  return {\n    json: {\n      ...data,\n      email_validated: email,\n      phone_validated: telefono,\n      validation_passed: false\n    }\n  };\n}\n\n// Actualizar datos validados\ndata.Email = email;\ndata.Telefono2 = telefono;\n\n// Retornar datos validados\nreturn {\n  json: {\n    ...data,\n    email_validated: email,\n    phone_validated: telefono,\n    validation_passed: true\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1240,
        -260
      ],
      "id": "11b43055-10b8-4515-8408-bb0608d7d302",
      "name": "Validar email y phone"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $json.location_id }}\",\n  \"page\": 1,\n  \"pageLimit\": 1,\n  \"filters\": [\n    {\n      \"group\": \"OR\",\n      \"filters\": [\n        {\n          \"field\": \"phone\",\n          \"operator\": \"eq\",\n          \"value\": \"{{ $('Validar email y phone').item.json.Telefono2 }}\"\n        },\n        {\n          \"field\": \"email\",\n          \"operator\": \"eq\",\n          \"value\": \"{{ $('Validar email y phone').item.json.Email }}\"\n        }\n      ]\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1900,
        -360
      ],
      "id": "3ae81e1d-5ecb-4e8c-a8f5-291c682a37bb",
      "name": "Buscar contacto"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "43c8978e-e42f-4170-9c78-e8988dd26694",
              "leftValue": "={{ $json.contacts }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2120,
        -360
      ],
      "id": "c007508d-1291-404a-aa5e-733c859c27d1",
      "name": "existe?"
    },
    {
      "parameters": {
        "jsCode": "return {\n  message: \"Ya el lead fue procesado (se encuentra en tabla intermedia)\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1240,
        -60
      ],
      "id": "e8222e53-09f1-4b82-9acf-ca316cee67f3",
      "name": "devolver lead ya encontrado"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e74b7067-9631-4524-82db-431aed6effd2",
              "leftValue": "={{ $json.validation_passed }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1460,
        -260
      ],
      "id": "fbe1e418-a3d2-4732-96a1-9bbb9490ebd8",
      "name": "valido el email y phone?"
    },
    {
      "parameters": {
        "jsCode": "return {\n  message: \"Lead con los datos de email o phone malos\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1680,
        -160
      ],
      "id": "737493ce-5604-4fa3-ba7b-b5aca2ce61ac",
      "name": "devolver que es inválido el phone y el email"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "system_ropofy_locations",
          "mode": "list",
          "cachedResultName": "system_ropofy_locations"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "location_id",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1680,
        -360
      ],
      "id": "67244e27-2f40-4d2a-b1ad-1b6f4d2c4b8a",
      "name": "obtener token",
      "credentials": {
        "postgres": {
          "id": "tfjc18K49daMASdp",
          "name": "Base de datos APIS"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return {\n  message: \"Origen no mapeado\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        160
      ],
      "id": "e6fed878-780c-43b7-a800-223ac9d35e33",
      "name": "devolver que no está en el origen"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/locations/{{ $('Webhook').item.json.params.id_location }}/customFields",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "all"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2440,
        -580
      ],
      "id": "b2c3392b-c80e-45be-a450-d3d6fa97edde",
      "name": "Peticion custom fields"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $('Buscar contacto').item.json.contacts[0].id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "customFields",
              "value": "={{ $json.customFields }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3020,
        -580
      ],
      "id": "7dd4874a-3b5e-48eb-9d3f-a746dfee0f5f",
      "name": "Actualizar custom fields"
    },
    {
      "parameters": {
        "content": "Proceso de contactos",
        "height": 260,
        "width": 780,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2380,
        -660
      ],
      "typeVersion": 1,
      "id": "fc66e3c8-ae9f-4791-bbb9-aca2c7332e09",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "url": "https://services.leadconnectorhq.com/opportunities/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "location_id",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            },
            {
              "name": "contact_id",
              "value": "={{ $json.contact.id }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3240,
        -580
      ],
      "id": "50c60ebc-b7b1-4063-be1c-3a591af5278b",
      "name": "Buscar oportunidades del contacto"
    },
    {
      "parameters": {
        "content": "Proceso de contactos",
        "height": 260,
        "width": 1040,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3160,
        -660
      ],
      "typeVersion": 1,
      "id": "1604a3aa-ae9c-41fd-abc9-1a671c76e77a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ff42f4d3-b2cb-4f3e-929a-b37d5d36adc9",
              "leftValue": "={{ $json.opportunities }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3460,
        -580
      ],
      "id": "9beff699-4e2b-4ae6-82ed-9cb555af7ade",
      "name": "Tiene oportunidades anteriores?"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/opportunities",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"pipelineId\": \"{{ $('obtener el pipeline de llegada del lead').item.json.id ?? \"\"}}\",\n  \"locationId\": \"{{ $('Webhook').item.json.params.id_location }}\",\n  \"name\": \"{{ $('Buscar contacto').item.json.contacts[0].firstName ?? $('Webhook').item.json.body.NombreContacto}}\",\n  \"pipelineStageId\": \"7915dedc-8f18-44d5-8bc3-77c04e994a10\",\n  \"status\": \"open\",\n  \"contactId\": \"mTkSCb1UBjb5tk4OvB69\",\n  \"monetaryValue\": 220,\n  \"assignedTo\": \"082goXVW3lIExEQPOnd3\",\n  \"customFields\": [\n    {\n      \"id\": \"6dvNaf7VhkQ9snc5vnjJ\",\n      \"key\": \"my_custom_field\",\n      \"field_value\": \"9039160788\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        -320
      ],
      "id": "146f292e-56c1-4627-abd5-20e4ac8512fb",
      "name": "Crear nueva oportunidad"
    },
    {
      "parameters": {
        "url": "https://ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net/webhook/api/getCustomValue",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "lead_pipeline"
            },
            {
              "name": "id_location",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3680,
        -520
      ],
      "id": "3a49d805-b5a3-41a9-b251-4f0a57acbdad",
      "name": "obtener el pipeline de llegada del lead"
    },
    {
      "parameters": {
        "url": "https://ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net/webhook/api/getCustomValue",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "lead_pipeline_stage"
            },
            {
              "name": "id_location",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3900,
        -520
      ],
      "id": "a42551ad-9609-45d7-9619-5f8fa163c1a6",
      "name": "obtener el stage de llegada del lead"
    },
    {
      "parameters": {
        "jsCode": "// Metadata = array de campos (tu JSON de custom fields exportado de GoHighLevel)\nconst metadata = $('Peticion custom fields').first().json.customFields || [];\n\n// Webhook trigger trae el body aquí:\nconst inputData = $('Webhook').first().json.body;\n\n// Mapeo: { fieldKey_en_GHL : propiedad_en_body }\nconst values = {\n  \"opportunity.id_crm\": \"ID\",\n  \"opportunity.origen\": \"Origen\",\n  \"opportunity.campaign\": \"Campanna\",\n  \"opportunity.modelo_de_inters\": \"modelo_interes\",\n  \"opportunity.marca_de_inters\": \"marca_interes\",\n  \"opportunity.observaciones\": \"Observaciones\",\n  \"opportunity.element\": \"Sistema\",\n  \"opportunity.dane\": \"CodigoDANE\",\n  \"opportunity.dane_departamento\": \"CodigoDANE\", // se corta en substring(0,2)\n  \"opportunity.codigo_nivel_interes\": \"NivelInteres\",\n  \"opportunity.documento_de_identidad_nitcc\": \"Documento\",\n  \"opportunity.estado_impulsa\": \"Estado\",\n  \"opportunity.codigo_punto_de_venta\": \"Establecimiento\"\n};\n\n// Función auxiliar para leer paths como \"Productos[0].Marca\"\nfunction getValueByPath(obj, path) {\n  try {\n    return path.split(/[\\.\\[\\]]/).filter(Boolean).reduce((acc, key) => acc?.[key], obj);\n  } catch {\n    return \"\";\n  }\n}\n\nconst customFields = Object.keys(values).map(fieldKey => {\n  const fieldDef = metadata.find(f => f.fieldKey === fieldKey);\n  if (!fieldDef) return null;\n\n  let rawValue = getValueByPath(inputData, values[fieldKey]) || \"\";\n\n  // Caso especial: cortar CodigoDANE para departamento\n  if (fieldKey === \"contact.dane_departamento\" && rawValue) {\n    rawValue = rawValue.toString().substring(0, 2);\n  }\n\n  return {\n    id: fieldDef.id,\n    key: fieldKey.replace(\"contact.\", \"\"),\n    field_value: rawValue\n  };\n}).filter(Boolean);\n\nreturn [{ json: { customFields } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4140,
        -520
      ],
      "id": "f3582fee-d0d7-49be-8f74-931c5318f90b",
      "name": "mapear custom fields oportunidad"
    },
    {
      "parameters": {
        "jsCode": "// Metadata = array de campos (tu JSON de custom fields exportado de GoHighLevel)\nconst metadata = $json.customFields || [];\n\n// Webhook trigger trae el body aquí:\nconst inputData = $('Webhook').first().json.body;\n\n// Mapeo: { fieldKey_en_GHL : propiedad_en_body }\nconst values = {\n  \"contact.id_crm\": \"ID\",\n  \"contact.origen\": \"Origen\",\n  \"contact.campaign\": \"Campanna\",\n  \"contact.modelo_de_interes\": \"Productos[0].Producto\", // sacamos del primer item\n  \"contact.marca_de_interes\": \"Productos[0].Marca\",     // sacamos del primer item\n  \"contact.observaciones\": \"Observaciones\",\n  \"contact.element\": \"Sistema\",\n  \"contact.dane\": \"CodigoDANE\",\n  \"contact.dane_departamento\": \"CodigoDANE\", // se corta en substring(0,2)\n  \"contact.codigo_nivel_interes\": \"NivelInteres\",\n  \"contact.documento_de_identidad_nitcc\": \"Documento\",\n  \"contact.estado_impulsa\": \"Estado\",\n  \"contact.codigo_punto_de_venta\": \"Establecimiento\"\n};\n\n// Función auxiliar para leer paths como \"Productos[0].Marca\"\nfunction getValueByPath(obj, path) {\n  try {\n    return path.split(/[\\.\\[\\]]/).filter(Boolean).reduce((acc, key) => acc?.[key], obj);\n  } catch {\n    return \"\";\n  }\n}\n\nconst customFields = Object.keys(values).map(fieldKey => {\n  const fieldDef = metadata.find(f => f.fieldKey === fieldKey);\n  if (!fieldDef) return null;\n\n  let rawValue = getValueByPath(inputData, values[fieldKey]) || \"\";\n\n  // Caso especial: cortar CodigoDANE para departamento\n  if (fieldKey === \"contact.dane_departamento\" && rawValue) {\n    rawValue = rawValue.toString().substring(0, 2);\n  }\n\n  return {\n    id: fieldDef.id,\n    key: fieldKey.replace(\"contact.\", \"\"),\n    field_value: rawValue\n  };\n}).filter(Boolean);\n\nreturn [{ json: { customFields } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2700,
        -580
      ],
      "id": "d025a016-9f8c-4763-b023-4671e3d94f8a",
      "name": "mapear custom fields oportunidades"
    }
  ],
  "pinData": {},
  "repo_name": "ropoflow_workflows_backup",
  "repo_owner": "sebastianOrtizRopofy",
  "repo_path": "ropoflow_workflows_backup",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-01T20:49:55.087Z",
  "versionId": "faf66002-be14-46e9-9a1b-8f9ece616f22"
}