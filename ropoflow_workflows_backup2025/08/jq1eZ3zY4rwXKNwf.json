{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "Está desde los origenes deseados?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "esta en tabla intermedia?": {
      "main": [
        [
          {
            "node": "Validar email y phone",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "devolver lead ya encontrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Está desde los origenes deseados?": {
      "main": [
        [
          {
            "node": "buscar lead en tabla intermedia",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "devolver que no está en el origen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar lead en tabla intermedia": {
      "main": [
        [
          {
            "node": "esta en tabla intermedia?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar email y phone": {
      "main": [
        [
          {
            "node": "valido el email y phone?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "valido el email y phone?": {
      "main": [
        [
          {
            "node": "obtener token",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "devolver que es inválido el phone y el email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener token": {
      "main": [
        [
          {
            "node": "Buscar contacto por phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "existe?": {
      "main": [
        [
          {
            "node": "Obtener custom fields de la subcuenta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Obtener custom fields de la subcuenta1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar custom fields": {
      "main": [
        [
          {
            "node": "Actualizar tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar oportunidades del contacto": {
      "main": [
        [
          {
            "node": "obtener el nombre del pipeline de llegada del lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener el nombre del pipeline de llegada del lead": {
      "main": [
        [
          {
            "node": "obtener el nombre del stage de llegada del lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener el nombre del stage de llegada del lead": {
      "main": [
        [
          {
            "node": "Obtener pipelines de la subcuenta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener pipelines de la subcuenta": {
      "main": [
        [
          {
            "node": "Sacar id del pipeline y stage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sacar id del pipeline y stage": {
      "main": [
        [
          {
            "node": "si tiene los cusotm values de pipeline?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener custom fields de la subcuenta": {
      "main": [
        [
          {
            "node": "mapear custom fields contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mapear custom fields contact": {
      "main": [
        [
          {
            "node": "Actualizar custom fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener custom fields de la subcuenta1": {
      "main": [
        [
          {
            "node": "mapear custom fields contact1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mapear custom fields contact1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear contacto": {
      "main": [
        [
          {
            "node": "obtener el nombre del pipeline de llegada del lead1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "devolver que el contacto ya está creado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mapear custom fields oportunidad": {
      "main": [
        [
          {
            "node": "el contacto tiene oportunidades asignadas?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener el nombre del pipeline de llegada del lead1": {
      "main": [
        [
          {
            "node": "obtener el nombre del stage de llegada del lead1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "obtener el nombre del stage de llegada del lead1": {
      "main": [
        [
          {
            "node": "Obtener pipelines de la subcuenta1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener pipelines de la subcuenta1": {
      "main": [
        [
          {
            "node": "Sacar id del pipeline y stage1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sacar id del pipeline y stage1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "mapear custom fields oportunidad1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "devolver que no se encontró el pipeline/stage1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "mapear custom fields oportunidad1": {
      "main": [
        [
          {
            "node": "Crear nueva oportunidad1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "devolver todas las oportunidades": {
      "main": [
        [
          {
            "node": "buscar status open en las oportunidades",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar status open en las oportunidades": {
      "main": [
        [
          {
            "node": "Hay almenos 1 en open?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hay almenos 1 en open?": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "crear nueva oportunidad abierta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear nueva oportunidad1": {
      "main": [
        [
          {
            "node": "guardar en tabla intermedia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crear nueva oportunidad abandonada": {
      "main": [
        [
          {
            "node": "guardar en tabla intermedia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "crear nueva oportunidad abierta": {
      "main": [
        [
          {
            "node": "guardar en tabla intermedia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar tags": {
      "main": [
        [
          {
            "node": "Buscar oportunidades del contacto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "existe?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "buscar por phone +57",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar contacto por phone": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar por phone +57": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "existe?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "buscar por email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar por email": {
      "main": [
        [
          {
            "node": "existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "el contacto tiene oportunidades asignadas?": {
      "main": [
        [
          {
            "node": "devolver todas las oportunidades",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "crear nueva oportunidad abierta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "si tiene los cusotm values de pipeline?": {
      "main": [
        [
          {
            "node": "mapear custom fields oportunidad",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "devolver que no se encontró el pipeline/stage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Crear contacto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Crear nueva oportunidad abandonada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-28T16:05:49.453Z",
  "id": "jq1eZ3zY4rwXKNwf",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "recibir leads impulsa",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/impulsa/oportunidad/:id_location",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1080,
        -120
      ],
      "id": "df1854a3-94df-4298-af03-753483e4e3f7",
      "name": "Webhook",
      "webhookId": "56bafe2c-9754-4cd9-8f6e-dfce563b9878"
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "id_impulsa",
              "value": "={{ $json.body.ID }}"
            },
            {
              "key": "id_location",
              "value": "={{ $json.params.id_location }}"
            },
            {
              "key": "email",
              "value": "={{ $json.body.Email }}"
            },
            {
              "key": "phone",
              "value": "={{ $json.body.Telefono2 }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1.1,
      "position": [
        -860,
        -120
      ],
      "id": "2cfe4481-3a8c-49ef-9c2a-a2efa1dc03de",
      "name": "Execution Data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2e1f212b-14cc-4ee1-a210-043e33e3ea60",
              "leftValue": "={{ $json.id_impulsa }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -200,
        -220
      ],
      "id": "06eae1e0-80d3-4244-bacd-b73af88368c0",
      "name": "esta en tabla intermedia?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "a5d5388e-d9c6-435c-9253-821ad1f4514c",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "mobility lead",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "8f89c6d8-fe3d-4740-a7c4-0f3226a32a9c",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "auteco sas",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2834833a-14d4-42f5-ad86-36f54bcc2a9a",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "mobility test drive",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "c3da40a5-8267-4349-aecf-cbb18337ddff",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "hub-terminal",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "2490a487-df3f-42fa-8555-0ab55085cace",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "origin_pilot_2",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "b099cd25-b88b-4d93-9aef-d49fed3067fc",
              "leftValue": "={{ $('Execution Data').item.json.body.Origen.toLowerCase() }}",
              "rightValue": "origin_pilot_3",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -640,
        -120
      ],
      "id": "c248c7e0-fe5e-45e4-90e8-c798ae35a16f",
      "name": "Está desde los origenes deseados?"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "system_ropofy_opportunities_impulsa",
          "mode": "list",
          "cachedResultName": "system_ropofy_opportunities_impulsa"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "id_impulsa",
              "value": "={{ $json.body.ID + \"\" }}"
            },
            {
              "column": "id_location",
              "value": "={{ $json.params.id_location + \"\" }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -420,
        -220
      ],
      "id": "7ed7ccd4-882d-4d6b-8ad6-f582b2b49345",
      "name": "buscar lead en tabla intermedia",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "tfjc18K49daMASdp",
          "name": "Base de datos APIS"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Función para validar email usando regex\nfunction isValidEmail(email) {\n  if (!email || typeof email !== 'string') {\n    return false;\n  }\n  \n  const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  return regex.test(email) && !email.includes(' ');\n}\n\n// Obtener datos del request\nconst data = $('Webhook').first().json.body;\n\n// Variables para almacenar email y teléfono validados\nlet email = '';\nlet telefono = '';\n\n// Validar email\nif (data.Email && isValidEmail(data.Email)) {\n  console.log(\"ES VALIDO EL EMAIL\");\n  email = data.Email;\n} else {\n  console.log(\"ES INVALIDO EL EMAIL\");\n  data.Email = '';\n  email = \"\";\n}\n\n// Validar teléfono (eliminar + al inicio y espacios)\nif (data.Telefono2) {\n  telefono = data.Telefono2.toString().trim().replace(/^\\+/, \"\"); \n}\n\n// Verificar que al menos uno de los dos esté presente\nif (email === '' && telefono === '') {\n  return {\n    json: {\n      ...data,\n      email_validated: email,\n      phone_validated: telefono,\n      validation_passed: false\n    }\n  };\n}\n\n// Actualizar datos validados\ndata.Email = email;\ndata.Telefono2 = telefono;\n\n// Retornar datos validados\nreturn {\n  json: {\n    ...data,\n    email_validated: email,\n    phone_validated: telefono,\n    validation_passed: true\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        20,
        -320
      ],
      "id": "11b43055-10b8-4515-8408-bb0608d7d302",
      "name": "Validar email y phone"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "43c8978e-e42f-4170-9c78-e8988dd26694",
              "leftValue": "={{ $json.contacts }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1920,
        -420
      ],
      "id": "c007508d-1291-404a-aa5e-733c859c27d1",
      "name": "existe?"
    },
    {
      "parameters": {
        "jsCode": "return {\n  message: \"Ya el lead fue procesado (se encuentra en tabla intermedia)\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        20,
        -120
      ],
      "id": "e8222e53-09f1-4b82-9acf-ca316cee67f3",
      "name": "devolver lead ya encontrado"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e74b7067-9631-4524-82db-431aed6effd2",
              "leftValue": "={{ $json.validation_passed }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        240,
        -320
      ],
      "id": "fbe1e418-a3d2-4732-96a1-9bbb9490ebd8",
      "name": "valido el email y phone?"
    },
    {
      "parameters": {
        "jsCode": "return {\n  message: \"Lead con los datos de email o phone malos\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        -220
      ],
      "id": "737493ce-5604-4fa3-ba7b-b5aca2ce61ac",
      "name": "devolver que es inválido el phone y el email"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "system_ropofy_locations",
          "mode": "list",
          "cachedResultName": "system_ropofy_locations"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "location_id",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        460,
        -420
      ],
      "id": "67244e27-2f40-4d2a-b1ad-1b6f4d2c4b8a",
      "name": "obtener token",
      "credentials": {
        "postgres": {
          "id": "tfjc18K49daMASdp",
          "name": "Base de datos APIS"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return {\n  message: \"Origen no mapeado\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -420,
        -20
      ],
      "id": "e6fed878-780c-43b7-a800-223ac9d35e33",
      "name": "devolver que no está en el origen"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $('existe?').item.json.contacts[0].id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "customFields",
              "value": "={{ $json.customFields }}"
            },
            {
              "name": "email",
              "value": "={{ $('Validar email y phone').item.json.Email }}"
            },
            {
              "name": "phone",
              "value": "={{ $('Validar email y phone').item.json.Telefono2 }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2500,
        -620
      ],
      "id": "7dd4874a-3b5e-48eb-9d3f-a746dfee0f5f",
      "name": "Actualizar custom fields",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "content": "Proceso de contactos",
        "height": 1140,
        "width": 880,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1880,
        -980
      ],
      "typeVersion": 1,
      "id": "fc66e3c8-ae9f-4791-bbb9-aca2c7332e09",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "url": "https://services.leadconnectorhq.com/opportunities/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "location_id",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            },
            {
              "name": "contact_id",
              "value": "={{ $('Buscar contacto por phone').item.json.contacts.first()?.id ?? $('buscar por phone +57').item.json.contacts.first()?.id ?? $('buscar por email').item.json.contacts.first()?.id }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2880,
        -620
      ],
      "id": "50c60ebc-b7b1-4063-be1c-3a591af5278b",
      "name": "Buscar oportunidades del contacto",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "content": "Proceso de oportunidades",
        "height": 1140,
        "width": 3080,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2760,
        -980
      ],
      "typeVersion": 1,
      "id": "1604a3aa-ae9c-41fd-abc9-1a671c76e77a",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "url": "https://ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net/webhook/api/getCustomValue",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "lead_pipeline"
            },
            {
              "name": "id_location",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3080,
        -620
      ],
      "id": "3a49d805-b5a3-41a9-b251-4f0a57acbdad",
      "name": "obtener el nombre del pipeline de llegada del lead",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "url": "https://ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net/webhook/api/getCustomValue",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "lead_pipeline_stage"
            },
            {
              "name": "id_location",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3300,
        -620
      ],
      "id": "a42551ad-9609-45d7-9619-5f8fa163c1a6",
      "name": "obtener el nombre del stage de llegada del lead",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "url": "https://services.leadconnectorhq.com/opportunities/pipelines",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "locationId",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3520,
        -620
      ],
      "id": "74a2d259-a5f1-4c0c-b3b5-dbb86ba4aea3",
      "name": "Obtener pipelines de la subcuenta",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "jsCode": "// Variables de búsqueda (puedes pasarlas dinámicamente desde el workflow)\nconst pipeline_name = $('obtener el nombre del pipeline de llegada del lead').first().json.value; \nconst stage_name = $('obtener el nombre del stage de llegada del lead').first().json.value;\n\n// Obtener datos de entrada (el array que mostraste)\nconst input = items[0].json;\n\n// Extraer pipelines\nconst pipelines = input.pipelines || [];\n\nlet pipelineObj = null;\nlet stageObj = null;\n\n// Buscar pipeline por nombre\npipelineObj = pipelines.find(p => p.name === pipeline_name);\n\nif (pipelineObj) {\n  // Buscar stage dentro de ese pipeline\n  stageObj = pipelineObj.stages.find(s => s.name === stage_name) || null;\n}\n\n// Retornar resultado\nreturn [\n  {\n    json: {\n      pipeline: pipelineObj || {},\n      stage: stageObj || {},\n      found: !!(pipelineObj && stageObj)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3740,
        -620
      ],
      "id": "bc936681-9d50-4419-9886-631b76cb7415",
      "name": "Sacar id del pipeline y stage"
    },
    {
      "parameters": {
        "jsCode": "return {\n    message: \"No se encontró el pipeline o el stage.\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4180,
        -520
      ],
      "id": "f64527cf-170a-48e0-ab7e-52c35e3d3b23",
      "name": "devolver que no se encontró el pipeline/stage"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/locations/{{ $('Webhook').item.json.params.id_location }}/customFields",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "all"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2160,
        -620
      ],
      "id": "b2c3392b-c80e-45be-a450-d3d6fa97edde",
      "name": "Obtener custom fields de la subcuenta",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "jsCode": "// Metadata = array de campos (tu JSON de custom fields exportado de GoHighLevel)\nconst metadata = $json.customFields || [];\n\n// Webhook trigger trae el body aquí:\nconst inputData = $('Webhook').first().json.body;\n\n// Mapeo: { fieldKey_en_GHL : propiedad_en_body }\nconst values = {\n  \"contact.id_crm\": \"ID\",\n  \"contact.origen\": \"Origen\",\n  \"contact.campaign\": \"Campanna\",\n  \"contact.modelo_de_interes\": \"Productos[0].Producto\", // sacamos del primer item\n  \"contact.marca_de_interes\": \"Productos[0].Marca\",     // sacamos del primer item\n  \"contact.observaciones\": \"Observaciones\",\n  \"contact.element\": \"Sistema\",\n  \"contact.dane\": \"CodigoDANE\",\n  \"contact.dane_departamento\": \"CodigoDANE\", // se corta en substring(0,2)\n  \"contact.codigo_nivel_interes\": \"NivelInteres\",\n  \"contact.documento_de_identidad_nitcc\": \"Documento\",\n  \"contact.estado_impulsa\": \"Estado\",\n  \"contact.codigo_punto_de_venta\": \"Establecimiento\"\n};\n\n// Función auxiliar para leer paths como \"Productos[0].Marca\"\nfunction getValueByPath(obj, path) {\n  try {\n    return path.split(/[\\.\\[\\]]/).filter(Boolean).reduce((acc, key) => acc?.[key], obj);\n  } catch {\n    return \"\";\n  }\n}\n\nconst customFields = Object.keys(values).map(fieldKey => {\n  const fieldDef = metadata.find(f => f.fieldKey === fieldKey);\n  if (!fieldDef) return null;\n\n  let rawValue = getValueByPath(inputData, values[fieldKey]) || \"\";\n\n  // Caso especial: cortar CodigoDANE para departamento\n  if (fieldKey === \"contact.dane_departamento\" && rawValue) {\n    rawValue = rawValue.toString().substring(0, 2);\n  }\n\n  return {\n    id: fieldDef.id,\n    key: fieldKey.replace(\"contact.\", \"\"),\n    field_value: rawValue\n  };\n}).filter(Boolean);\n\nreturn [{ json: { customFields } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2340,
        -620
      ],
      "id": "d025a016-9f8c-4763-b023-4671e3d94f8a",
      "name": "mapear custom fields contact"
    },
    {
      "parameters": {
        "url": "=https://services.leadconnectorhq.com/locations/{{ $('Webhook').item.json.params.id_location }}/customFields",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "all"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2120,
        -220
      ],
      "id": "b0dce9d5-f7cf-4e13-869b-85bfcd15dfda",
      "name": "Obtener custom fields de la subcuenta1",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "jsCode": "// Metadata = array de campos (tu JSON de custom fields exportado de GoHighLevel)\nconst metadata = $json.customFields || [];\n\n// Webhook trigger trae el body aquí:\nconst inputData = $('Webhook').first().json.body;\n\n// Mapeo: { fieldKey_en_GHL : propiedad_en_body }\nconst values = {\n  \"contact.id_crm\": \"ID\",\n  \"contact.origen\": \"Origen\",\n  \"contact.campaign\": \"Campanna\",\n  \"contact.modelo_de_interes\": \"Productos[0].Producto\", // sacamos del primer item\n  \"contact.marca_de_interes\": \"Productos[0].Marca\",     // sacamos del primer item\n  \"contact.observaciones\": \"Observaciones\",\n  \"contact.element\": \"Sistema\",\n  \"contact.dane\": \"CodigoDANE\",\n  \"contact.dane_departamento\": \"CodigoDANE\", // se corta en substring(0,2)\n  \"contact.codigo_nivel_interes\": \"NivelInteres\",\n  \"contact.documento_de_identidad_nitcc\": \"Documento\",\n  \"contact.estado_impulsa\": \"Estado\",\n  \"contact.codigo_punto_de_venta\": \"Establecimiento\"\n};\n\n// Función auxiliar para leer paths como \"Productos[0].Marca\"\nfunction getValueByPath(obj, path) {\n  try {\n    return path.split(/[\\.\\[\\]]/).filter(Boolean).reduce((acc, key) => acc?.[key], obj);\n  } catch {\n    return \"\";\n  }\n}\n\nconst customFields = Object.keys(values).map(fieldKey => {\n  const fieldDef = metadata.find(f => f.fieldKey === fieldKey);\n  if (!fieldDef) return null;\n\n  let rawValue = getValueByPath(inputData, values[fieldKey]) || \"\";\n\n  // Caso especial: cortar CodigoDANE para departamento\n  if (fieldKey === \"contact.dane_departamento\" && rawValue) {\n    rawValue = rawValue.toString().substring(0, 2);\n  }\n\n  return {\n    id: fieldDef.id,\n    key: fieldKey.replace(\"contact.\", \"\"),\n    field_value: rawValue\n  };\n}).filter(Boolean);\n\nreturn [{ json: { customFields } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2340,
        -220
      ],
      "id": "1be1672b-b8e4-4ff3-9f4f-f0cd94d88359",
      "name": "mapear custom fields contact1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $('Validar email y phone').item.json.NombreContacto }}"
            },
            {
              "name": "firstName",
              "value": "={{ $('Validar email y phone').item.json.NombreContacto }}"
            },
            {
              "name": "email",
              "value": "={{ $('Validar email y phone').item.json.Email }}"
            },
            {
              "name": "locationId",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            },
            {
              "name": "phone",
              "value": "={{ $('Validar email y phone').item.json.Telefono2 }}"
            },
            {
              "name": "address1",
              "value": "={{ $('Validar email y phone').item.json.Direccion }}"
            },
            {
              "name": "tags",
              "value": "impulsa"
            },
            {
              "name": "customFields",
              "value": "={{ $json.customFields }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2860,
        -220
      ],
      "id": "b9051174-8b60-416e-b728-f0b479109512",
      "name": "Crear contacto",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "// ----------------------------------------\n// Metadata = array de campos (custom fields de GoHighLevel)\n// ----------------------------------------\nconst metadata =\n  $('Obtener custom fields de la subcuenta').first().json.customFields;\n\nconsole.log(metadata);\n\n// ----------------------------------------\n// Webhook trigger trae el body aquí\n// ----------------------------------------\nconst inputData = $('Webhook').first().json.body;\n\n// ----------------------------------------\n// Mapeo: { fieldKey_en_GHL : propiedad_en_body }\n// ----------------------------------------\nconst values = {\n  \"opportunity.id_crm\": \"ID\",\n  \"opportunity.origen\": \"Origen\",\n  \"opportunity.campaign\": \"Campanna\",\n  \"opportunity.modelo_de_inters\": \"modelo_interes\",\n  \"opportunity.marca_de_inters\": \"marca_interes\",\n  \"opportunity.observaciones\": \"Observaciones\",\n  \"opportunity.element\": \"Sistema\",\n  \"opportunity.dane\": \"CodigoDANE\",\n  \"opportunity.dane_departamento\": \"CodigoDANE\", // se corta en substring(0,2)\n  \"opportunity.codigo_nivel_interes\": \"NivelInteres\",\n  \"opportunity.documento_de_identidad_nitcc\": \"Documento\",\n  \"opportunity.estado_impulsa\": \"Estado\",\n  \"opportunity.codigo_punto_de_venta\": \"Establecimiento\"\n};\n\n// ----------------------------------------\n// Función auxiliar para leer paths como \"Productos[0].Marca\"\n// ----------------------------------------\nfunction getValueByPath(obj, path) {\n  try {\n    return path\n      .split(/[\\.\\[\\]]/)\n      .filter(Boolean)\n      .reduce((acc, key) => acc?.[key], obj);\n  } catch {\n    return \"\";\n  }\n}\n\n// ----------------------------------------\n// Construcción de customFields\n// ----------------------------------------\nconst customFields = Object.keys(values)\n  .map(fieldKey => {\n    const fieldDef = metadata.find(f => f.fieldKey === fieldKey);\n    if (!fieldDef) return null;\n\n    let rawValue = getValueByPath(inputData, values[fieldKey]) || \"\";\n\n    // Caso especial: cortar CodigoDANE para departamento\n    if (fieldKey === \"contact.dane_departamento\" && rawValue) {\n      rawValue = rawValue.toString().substring(0, 2);\n    }\n\n    return {\n      id: fieldDef.id,\n      key: fieldKey.replace(\"contact.\", \"\"),\n      field_value: rawValue\n    };\n  })\n  .filter(Boolean);\n\n// ----------------------------------------\n// Retorno\n// ----------------------------------------\nreturn [{ json: { customFields } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4180,
        -720
      ],
      "id": "510408de-d997-4cb3-8a45-c68934cd86f0",
      "name": "mapear custom fields oportunidad"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/opportunities/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "pipelineId",
              "value": "={{ $('Sacar id del pipeline y stage1').item.json.pipeline.id }}"
            },
            {
              "name": "locationId",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            },
            {
              "name": "name",
              "value": "={{ $('Crear contacto').item.json.contact.firstName }} {{ $('Crear contacto').item.json.contact.lastName }}"
            },
            {
              "name": "pipelineStageId",
              "value": "={{ $('Sacar id del pipeline y stage1').item.json.stage.id }}"
            },
            {
              "name": "status",
              "value": "open"
            },
            {
              "name": "contactId",
              "value": "={{ $('Crear contacto').item.json.contact.id }}"
            },
            {
              "name": "customFields",
              "value": "={{ $json.customFields }}"
            },
            {
              "name": "source",
              "value": "={{ $('valido el email y phone?').first().json.Origen }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4400,
        -320
      ],
      "id": "af7d8ce4-0e4a-48f9-b286-fb043f921e5d",
      "name": "Crear nueva oportunidad1",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "url": "https://ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net/webhook/api/getCustomValue",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "lead_pipeline"
            },
            {
              "name": "id_location",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3120,
        -240
      ],
      "id": "a809aa25-8ccc-41a9-ab30-de0f7b13a8a5",
      "name": "obtener el nombre del pipeline de llegada del lead1",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "url": "https://ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net/webhook/api/getCustomValue",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "lead_pipeline_stage"
            },
            {
              "name": "id_location",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3300,
        -220
      ],
      "id": "ddac52dc-8a0b-41ab-ad38-876c57ed1895",
      "name": "obtener el nombre del stage de llegada del lead1",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "url": "https://services.leadconnectorhq.com/opportunities/pipelines",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "locationId",
              "value": "={{ $('Webhook').item.json.params.id_location }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3520,
        -220
      ],
      "id": "d388b6f4-52f9-42f0-b3ee-21f07eb0a863",
      "name": "Obtener pipelines de la subcuenta1",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "jsCode": "// Variables de búsqueda (puedes pasarlas dinámicamente desde el workflow)\nconst pipeline_name = $('obtener el nombre del pipeline de llegada del lead1').first().json.value; \nconst stage_name = $('obtener el nombre del stage de llegada del lead1').first().json.value;\n\n// Obtener datos de entrada (el array que mostraste)\nconst input = items[0].json;\n\n// Extraer pipelines\nconst pipelines = input.pipelines || [];\n\nlet pipelineObj = null;\nlet stageObj = null;\n\n// Buscar pipeline por nombre\npipelineObj = pipelines.find(p => p.name === pipeline_name);\n\nif (pipelineObj) {\n  // Buscar stage dentro de ese pipeline\n  stageObj = pipelineObj.stages.find(s => s.name === stage_name) || null;\n}\n\n// Retornar resultado\nreturn [\n  {\n    json: {\n      pipeline: pipelineObj || {},\n      stage: stageObj || {},\n      found: !!(pipelineObj && stageObj)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3740,
        -220
      ],
      "id": "45c798f5-0b13-4b81-9553-af9d3b2a584e",
      "name": "Sacar id del pipeline y stage1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fd214e96-778e-41ff-b5cd-4b9f0e79eb8e",
              "leftValue": "={{ $json.found }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3960,
        -220
      ],
      "id": "99270f41-ec1d-4891-91ef-506d4396ea8e",
      "name": "If1"
    },
    {
      "parameters": {
        "jsCode": "return {\n    message: \"No se encontró el pipeline o el stage.\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4180,
        -120
      ],
      "id": "6aa2eeb8-a551-4978-8260-adeab74d39f6",
      "name": "devolver que no se encontró el pipeline/stage1"
    },
    {
      "parameters": {
        "jsCode": "// ----------------------------------------\n// Metadata = array de campos (custom fields de GoHighLevel)\n// ----------------------------------------\nconst metadata =\n  $('Obtener custom fields de la subcuenta1').first().json.customFields;\n\nconsole.log(metadata);\n\n// ----------------------------------------\n// Webhook trigger trae el body aquí\n// ----------------------------------------\nconst inputData = $('Webhook').first().json.body;\n\n// ----------------------------------------\n// Mapeo: { fieldKey_en_GHL : propiedad_en_body }\n// NOTA: en Productos, tomamos siempre el primer item (índice 0)\n// ----------------------------------------\nconst values = {\n  \"opportunity.id_crm\": \"ID\",\n  \"opportunity.origen\": \"Origen\",\n  \"opportunity.campaign\": \"Campanna\",\n  \"opportunity.modelo_de_inters\": \"Productos[0].Producto\",   // 👈 modelo_interes viene de Producto\n  \"opportunity.marca_de_inters\": \"Productos[0].Marca\",       // 👈 marca_interes viene de Marca\n  \"opportunity.observaciones\": \"Observaciones\",\n  \"opportunity.element\": \"Sistema\",\n  \"opportunity.dane\": \"CodigoDANE\",\n  \"opportunity.codigo_nivel_interes\": \"NivelInteres\",\n  \"opportunity.documento_de_identidad_nitcc\": \"Documento\",\n  \"opportunity.estado_impulsa\": \"Estado\",\n  \"opportunity.codigo_punto_de_venta\": \"Establecimiento\"\n};\n\n// ----------------------------------------\n// Función auxiliar para leer paths como \"Productos[0].Marca\"\n// ----------------------------------------\nfunction getValueByPath(obj, path) {\n  try {\n    return path\n      .split(/[\\.\\[\\]]/)\n      .filter(Boolean)\n      .reduce((acc, key) => acc?.[key], obj);\n  } catch {\n    return \"\";\n  }\n}\n\n// ----------------------------------------\n// Construcción de customFields\n// ----------------------------------------\nconst customFields = Object.keys(values)\n  .map(fieldKey => {\n    const fieldDef = metadata.find(f => f.fieldKey === fieldKey);\n    if (!fieldDef) return null;\n\n    let rawValue = getValueByPath(inputData, values[fieldKey]) || \"\";\n\n    // Caso especial: cortar CodigoDANE para departamento\n    if (fieldKey === \"contact.dane_departamento\" && rawValue) {\n      rawValue = rawValue.toString().substring(0, 2);\n    }\n\n    return {\n      id: fieldDef.id,\n      key: fieldKey.replace(\"contact.\", \"\"),\n      field_value: rawValue\n    };\n  })\n  .filter(Boolean);\n\n// ----------------------------------------\n// Retorno\n// ----------------------------------------\nreturn [{ json: { customFields } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4180,
        -320
      ],
      "id": "a9ed85b6-64ee-4331-a9f6-cb8b39793efe",
      "name": "mapear custom fields oportunidad1"
    },
    {
      "parameters": {
        "jsCode": "return $('Buscar oportunidades del contacto').first().json.opportunities;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4620,
        -800
      ],
      "id": "33943f9a-b938-4601-8e20-1d45db5215a4",
      "name": "devolver todas las oportunidades"
    },
    {
      "parameters": {
        "jsCode": "// Si no hay items de entrada, devolver false por defecto\nif (!items || items.length === 0) {\n  return [\n    {\n      json: {\n        hasOpen: false\n      }\n    }\n  ];\n}\n\n// Obtener todas las oportunidades de la entrada\nconst opportunities = items.map(item => item.json);\n\n// Verificar si al menos una tiene status = \"open\"\nconst hasOpen = opportunities.some(opportunity => opportunity.status === \"open\");\n\n// Retornar un único item con el resultado\nreturn [\n  {\n    json: {\n      hasOpen\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4840,
        -800
      ],
      "id": "7ed1c08c-aa14-4513-b8cf-b481369a06d4",
      "name": "buscar status open en las oportunidades"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b9786c45-6939-43a0-bbe5-ec4984eb37c4",
              "leftValue": "={{ $json.hasOpen }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5060,
        -800
      ],
      "id": "f0e6de7e-a37b-4b55-abc9-075a30614896",
      "name": "Hay almenos 1 en open?"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/opportunities/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').first().json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "pipelineId",
              "value": "={{ $('Sacar id del pipeline y stage').first().json.pipeline.id }}"
            },
            {
              "name": "locationId",
              "value": "={{ $('Webhook').first().json.params.id_location }}"
            },
            {
              "name": "name",
              "value": "={{ $('existe?').first().json.contacts[0].firstName }} {{ $('existe?').first().json.contacts[0].lastName }}"
            },
            {
              "name": "pipelineStageId",
              "value": "={{ $('Sacar id del pipeline y stage').first().json.stage.id }}"
            },
            {
              "name": "status",
              "value": "abandoned"
            },
            {
              "name": "contactId",
              "value": "={{ $('existe?').first().json.contacts[0].id }}"
            },
            {
              "name": "customFields",
              "value": "={{ $('mapear custom fields oportunidad').first().json.customFields }}"
            },
            {
              "name": "source",
              "value": "={{ $('valido el email y phone?').first().json.Origen }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        -820
      ],
      "id": "146f292e-56c1-4627-abd5-20e4ac8512fb",
      "name": "Crear nueva oportunidad abandonada",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/opportunities/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').first().json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "pipelineId",
              "value": "={{ $('Sacar id del pipeline y stage').first().json.pipeline.id }}"
            },
            {
              "name": "locationId",
              "value": "={{ $('Webhook').first().json.params.id_location }}"
            },
            {
              "name": "name",
              "value": "={{ $('existe?').first().json.contacts[0].firstName }} {{ $('existe?').first().json.contacts[0].lastName }}"
            },
            {
              "name": "pipelineStageId",
              "value": "={{ $('Sacar id del pipeline y stage').first().json.stage.id }}"
            },
            {
              "name": "status",
              "value": "open"
            },
            {
              "name": "contactId",
              "value": "={{ $('existe?').first().json.contacts[0].id }}"
            },
            {
              "name": "customFields",
              "value": "={{ $('mapear custom fields oportunidad').first().json.customFields }}"
            },
            {
              "name": "source",
              "value": "={{ $('valido el email y phone?').first().json.Origen }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        -620
      ],
      "id": "270d7fcd-21fa-4ab3-a87b-7773d52395ea",
      "name": "crear nueva oportunidad abierta",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "system_ropofy_opportunities_impulsa",
          "mode": "list",
          "cachedResultName": "system_ropofy_opportunities_impulsa"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_impulsa": "={{ $('Webhook').first().json.body.ID }}",
            "id_location": "={{ $('Webhook').first().json.params.id_location }}",
            "updated_at": "2025-09-02T14:53:37",
            "created_at": "2025-09-02T14:53:39",
            "id_opportunity": "={{ $json.opportunity.id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id_impulsa",
              "displayName": "id_impulsa",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "id_location",
              "displayName": "id_location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "id_opportunity",
              "displayName": "id_opportunity",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        5540,
        -180
      ],
      "id": "aa9caa9a-8c1e-4aa2-99bd-f5655bc938e0",
      "name": "guardar en tabla intermedia",
      "credentials": {
        "postgres": {
          "id": "tfjc18K49daMASdp",
          "name": "Base de datos APIS"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://services.leadconnectorhq.com/contacts/{{ $json.contact.id }}/tags/",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"tags\": [\n    \"impulsa\"\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2700,
        -620
      ],
      "id": "96f9e246-e933-4041-b31d-ac9b7b02c187",
      "name": "Actualizar tags",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "jsCode": "return {\n  message: \"Contacto ya creado\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3120,
        -20
      ],
      "id": "7345474b-6fac-4ed9-997d-7c22a3b78177",
      "name": "devolver que el contacto ya está creado"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7b1be91b-7610-4eb4-9eaf-61955c631796",
              "leftValue": "={{ $json.contacts }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        900,
        -420
      ],
      "id": "77a3f014-7bd1-4129-a134-95578d5e5c99",
      "name": "If3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $json.location_id }}\",\n  \"page\": 1,\n  \"pageLimit\": 1,\n  \"filters\": [\n    {\n      \"field\": \"phone\",\n      \"operator\": \"eq\",\n      \"value\": \"{{ $('Validar email y phone').item.json.Telefono2 }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        680,
        -420
      ],
      "id": "3ae81e1d-5ecb-4e8c-a8f5-291c682a37bb",
      "name": "Buscar contacto por phone",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $('Webhook').item.json.params.id_location }}\",\n  \"page\": 1,\n  \"pageLimit\": 1,\n  \"filters\": [\n    {\n      \"field\": \"phone\",\n      \"operator\": \"eq\",\n      \"value\": \"+57{{ $('Validar email y phone').item.json.Telefono2 }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1200,
        -340
      ],
      "id": "21d121d6-7ca5-42d6-8c78-b1789127cc72",
      "name": "buscar por phone +57",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7b1be91b-7610-4eb4-9eaf-61955c631796",
              "leftValue": "={{ $json.contacts }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1440,
        -240
      ],
      "id": "b9e22ac6-8ee9-4124-a0c3-70da6a6ad621",
      "name": "If4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://services.leadconnectorhq.com/contacts/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ $('obtener token').item.json.token }}"
            },
            {
              "name": "Version",
              "value": "2021-07-28"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"locationId\": \"{{ $('Webhook').item.json.params.id_location }}\",\n  \"page\": 1,\n  \"pageLimit\": 1,\n  \"filters\": [\n    {\n      \"field\": \"email\",\n      \"operator\": \"eq\",\n      \"value\": \"{{ $('Validar email y phone').item.json.Email }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1620,
        -120
      ],
      "id": "63bfcf51-a623-4315-8fde-2c1a7354d35b",
      "name": "buscar por email",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c265fcec-0f68-4f76-852d-91dd24f3610c",
              "leftValue": "={{ $('Buscar oportunidades del contacto').item.json.opportunities }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4400,
        -720
      ],
      "id": "b50f3d3e-fc81-4272-be05-8419227ac1ae",
      "name": "el contacto tiene oportunidades asignadas?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fd214e96-778e-41ff-b5cd-4b9f0e79eb8e",
              "leftValue": "={{ $json.found }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3960,
        -620
      ],
      "id": "144cfc5d-ab09-4299-825a-e19020c249ad",
      "name": "si tiene los cusotm values de pipeline?"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2600,
        -220
      ],
      "id": "a23d4deb-0e25-4bb3-b900-ac2c7e5b5eb3",
      "name": "Wait",
      "webhookId": "a72edf55-82f9-4331-b5fe-3b9e199337ab"
    },
    {
      "parameters": {
        "amount": 60
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        5280,
        -900
      ],
      "id": "8f6151cc-6565-4fc9-b028-030d9a574244",
      "name": "Wait1",
      "webhookId": "30590bbe-ae07-4001-b38a-6dfaa7415dd9"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net",
            "user-agent": "GuzzleHttp/7",
            "max-forwards": "10",
            "x-arr-log-id": "496946fb-c398-4236-b852-5605aae71501",
            "client-ip": "35.209.139.90:40100",
            "disguised-host": "ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net",
            "x-site-deployment-id": "ropoflow",
            "was-default-hostname": "ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net",
            "x-forwarded-proto": "https",
            "x-appservice-proto": "https",
            "x-arr-ssl": "2048|256|CN=Microsoft Azure RSA TLS Issuing CA 04, O=Microsoft Corporation, C=US|CN=*.azurewebsites.net, O=Microsoft Corporation, L=Redmond, S=WA, C=US",
            "x-forwarded-tlsversion": "1.3",
            "x-forwarded-for": "35.209.139.90:40100",
            "x-original-url": "/webhook/56bafe2c-9754-4cd9-8f6e-dfce563b9878/impulsa/oportunidad/CZPs2xh8x6Mlc0piLSy8",
            "x-waws-unencoded-url": "/webhook/56bafe2c-9754-4cd9-8f6e-dfce563b9878/impulsa/oportunidad/CZPs2xh8x6Mlc0piLSy8",
            "x-client-ip": "35.209.139.90",
            "x-client-port": "40100",
            "content-type": "application/json",
            "content-length": "678"
          },
          "params": {
            "id_location": "CZPs2xh8x6Mlc0piLSy8"
          },
          "query": {},
          "body": {
            "ID": 4563787,
            "IDOportunidadAuteco": "W1282999",
            "Origen": "Auteco SAS",
            "Campanna": "Página Web",
            "Establecimiento": "550011625",
            "Productos": [
              {
                "Producto": "TVS APACHE RTR 160 4V FI ABS;",
                "Marca": "TVS"
              }
            ],
            "Observaciones": "2025/01/14- pago: Crédito / tipo_documento: Cédula de ciudadanía / cuota_inicial: Sin cuota inicial / plazos: 72 meses / fuente: FINANCIACION /",
            "TipoDocumento": "CC",
            "Documento": "1037641361",
            "NombreContacto": "Andres ropofy",
            "Email": "andres@bike2web.com",
            "Telefono2": "3135684490",
            "CodigoDANE": "00000",
            "Direccion": null,
            "HabeasData": true,
            "Sistema": "multimarca",
            "NivelInteres": "BB",
            "Usuario": "Prueba",
            "Estado": "PE",
            "NitCompania": "1037641361"
          },
          "webhookUrl": "https://ropoflow-c4acfzgsbqa5bfad.canadacentral-01.azurewebsites.net/webhook/56bafe2c-9754-4cd9-8f6e-dfce563b9878/impulsa/oportunidad/:id_location",
          "executionMode": "production"
        }
      }
    ]
  },
  "repo_name": "ropoflow_workflows_backup",
  "repo_owner": "sebastianOrtizRopofy",
  "repo_path": "ropoflow_workflows_backup",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-20T17:15:43.835Z",
  "versionId": "97d40b2d-a39a-416a-889a-fb4f2d103391"
}